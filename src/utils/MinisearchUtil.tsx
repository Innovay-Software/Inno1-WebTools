// Generate by crawling all routes. localhost:3000/dev/

import MiniSearch from "minisearch";

const pageIndices = [
  {
    id: 2,
    route: "/base64-encode/",
    title: "Base64 Encode",
    text: "What is Base64 Encoding?Base64 encoding is a technique for converting binary data (like images, videos, or binary files) into a human-readable format consisting of printable characters. It essentially translates binary data, which computers understand, into a text-based format that can be transmitted or stored in systems that only handle text.How Does Base64 Encoding Work?    • Splitting Binary Data: The binary data is broken down into chunks of 8 bits (1 byte) each.    • Converting to Base 64 Digits: Each 8-bit chunk is converted into a decimal number (0-255). This decimal value is then used to select a corresponding character from a base64 alphabet. The base64 alphabet typically consists of uppercase and lowercase letters (A-Z, a-z), digits (0-9), and special characters (+, /, or = depending on the specific base64 implementation).    • Padding (if necessary): If the original binary data doesn't have a length that's perfectly divisible by 3, padding characters (usually \"=\") are added to the end to create a complete multiple of 4 characters in the encoded output.Why Use Base64 Encoding?    • Transmission Compatibility: Base64 encoding allows sending binary data through channels designed for text data, such as email or web forms.    • Data Storage Compatibility: Binary data encoded in base64 can be stored in text files or databases that might not natively support binary data.    • Embedding Data: Base64 encoded data can be embedded within text-based resources like HTML or CSS. For instance, an image can be base64 encoded and included within an HTML page to display the image directly.Things to Consider with Base64 Encoding    • Increased Data Size: The base64 encoded data is roughly 33% larger than the original binary data due to the conversion process and potential padding.    • Decoding Required: The base64 encoded data needs to be decoded back into its original binary format to be usable by applications that require the binary data.    • Not Encryption: Base64 encoding is not a form of encryption. The encoded data is still readable, although it appears as a jumbled mess of letters, numbers, and symbols.",
  },
  {
    id: 3,
    route: "/color/",
    title: "HTML Color Code Converter",
    text: "What are HTML color codes?HTML color codes define the visual appearance of elements on webpages, like text, backgrounds, and borders. There are a few different ways to specify these colors:1. Using Color Names (Simple but Limited):HTML offers a set of predefined color names that you can use directly in your code. These are easy to remember and represent common colors. Here are some examples:    • red    • green    • blue    • yellow    • purple    • black    • whiteWhile convenient, color names have limitations. They might not provide the exact shade you want, and browser support for less common names can vary.2. Hexadecimal Codes (Most Popular and Precise):This is the most widely used method for specifying HTML colors. Hex codes represent colors using a 6-digit alphanumeric value preceded by a hash symbol (#). Each pair of digits corresponds to the intensity of red, green, and blue (RGB) components in the color, ranging from 00 (no intensity) to FF (maximum intensity).Here's how it works:    • #FF0000 - Pure red (FF for maximum red, 00 for no green and blue)    • #00FF00 - Pure green    • #FFFFFF - White (all color components at maximum intensity)    • #C0C0C0 - A shade of gray (equal parts red, green, and blue at medium intensity)    • Hex codes offer a vast range of colors and allow for precise control over their shades.3. RGB Values (Alternative to Hex):Colors can also be defined using the RGB (Red, Green, Blue) color model. Each color component has a value between 0 (black, minimum intensity) and 255 (white, maximum intensity).4. HSLA Colors (Less Common but Advanced):HSLA (Hue, Saturation, Lightness, Alpha) is another color model defining color based on hue (color angle), saturation (amount of color), lightness (brightness), and alpha (opacity). It's useful for creating variations of a base color.HSLA is less commonly used due to its slightly more complex syntax but can be valuable for specific design needs.Choosing the Right Method:    • For basic color needs, color names are a good starting point.    • For maximum control and a wider color range, hex codes are the preferred choice.    • If you're comfortable with RGB values, that method works as well.    • HSLA offers advanced color manipulation but might have a steeper learning curve.",
  },
  {
    id: 4,
    route: "/css-formatter/",
    title: "CSS Formatter ",
    text: "What is CSS?CSS stands for Cascading Style Sheets. It's a programming language specifically for styling web pages. Imagine HTML is the skeleton of a website, providing structure and content. CSS is like the muscles and skin, giving the website its visual appearance and layout.Here's why CSS is important:Visual Appeal: Without CSS, websites would be plain text on a white background. CSS allows for things like font styles, colors, backgrounds, and image placement, making websites visually engaging.Improved User Experience: CSS makes websites easier to navigate by controlling the layout of elements like menus and buttons.Efficiency: CSS allows you to style multiple web pages at once, saving time and effort compared to manually coding the style for each page.Responsiveness: With CSS, you can design websites that adapt to different screen sizes, ensuring a good experience on phones, tablets, and desktops.Overall, CSS is essential for creating attractive, user-friendly, and efficient websites.",
  },
  {
    id: 6,
    route: "/html-escape/",
    title: "HTML Escape",
    text: 'Why Escape Characters in HTML?Some characters in HTML have special meanings. For example, the "<" symbol is used to define the start of an HTML tag, and the "&" symbol is used to introduce character entities (special codes representing characters). If you want to display these characters literally on your webpage, you need to escape them to prevent the browser from interpreting them as code.How Does HTML Escaping Work?HTML escaping involves replacing these special characters with alternative representations that the browser understands as literal text. This is achieved using character entities.    • Character Entities: Character entities consist of an ampersand (&), a name or a numeric reference, and a semicolon (;). For example, "&lt;" is the character entity for "<" and "&amp;" is the entity for "&".Here are some common characters that need escaping in HTML:    • < (less than) - Escaped as &lt;    • > (greater than) - Escaped as &gt;    • & (ampersand) - Escaped as &amp;    • " (double quote) - Escaped as &quot;    • \' (single quote) - Escaped as &#39; (numeric entity)Benefits of HTML Escaping    • Correct Display: Ensures that special characters are shown as intended on the webpage and not misinterpreted as HTML code.    • Prevents Scripting Attacks: Escaping certain characters can help prevent malicious scripts from being injected into your HTML. For instance, escaping "<" can prevent attackers from embedding script tags within your content.How to Escape Characters in HTML?There are two main ways to escape characters in HTML:    • Using Named Character Entities: This method uses pre-defined entity names, as mentioned earlier. This is generally the preferred approach for readability.    • Using Numeric Character References: This method uses a decimal or hexadecimal number to represent the character code. For example, &#60; represents "<" (decimal reference) and &#x3C; represents "<" (hexadecimal reference).',
  },
  {
    id: 7,
    route: "/html-formatter/",
    title: "HTML Formatter ",
    text: "What is HTML?HTML stands for HyperText Markup Language. It's the foundation of creating webpages, providing the structure and content that browsers can understand and display. Think of it as the skeleton of a webpage.Here's a breakdown of what HTML does:Defines the structure: HTML breaks down the webpage into sections like headings, paragraphs, lists, images, and more. It uses tags, written with angle brackets (&lt and &gt), to define these elements. For example, the tag &lth1&gt indicates a heading and &ltstrong&gt creates bold text.Content without the bells and whistles: HTML focuses on the content itself, not how it looks. While you can specify some basic formatting like bold or italics, for visual design, HTML relies on Cascading Style Sheets (CSS).The building block for websites: Every webpage you see starts with HTML code. It provides the basic blueprint that browsers use to render the content and structure of the page.",
  },
  {
    id: 8,
    route: "/image-base64/",
    title: "Image Base64 Encoder",
    text: "The Base64 Conversion Process:    • Image Input: The process starts with an image file in its original format (JPEG, PNG, etc.).    • Reading the Image: The image data is read into memory, essentially a stream of bytes representing the image's information.    • Splitting into Bytes: This data stream is broken down into smaller chunks, typically 8 bits each, which is one byte.    • Base64 Conversion: Each 8-bit byte is converted into a corresponding character from the base64 alphabet. This alphabet consists of uppercase and lowercase letters (A-Z, a-z), digits (0-9), and special characters (+, /, or = depending on the specific base64 implementation).    • Encoding Overhead: Padding characters (usually \"=\") might be added to ensure the final encoded data has a length that's a multiple of 4, introducing some overhead.Benefits of Image Base64 Encoding:    • Convenience: Allows embedding images directly within text-based formats like HTML or CSS.    • Flexibility: The encoded data can be easily stored, transmitted, and decoded when needed.Things to Consider:    • Increased File Size: The base64 encoding process roughly increases the data size by 33% due to the conversion and potential padding.    • Decoding Required: The base64 encoded data needs to be decoded back into its original binary format for the image to be displayed or used by applications.    • Not Compression: Base64 encoding is not a form of image compression. It simply converts the format, and the resulting data might still be large for high-resolution images.",
  },
  {
    id: 9,
    route: "/image-color-extractor/",
    title: "Image Pixel Color Extractor",
    text: "What is an Image Color Extractor?An image color extractor is a software program or online tool that can analyze a digital image file and identify the prominent colors within it. It typically outputs this information in various formats, such as:    • Color palette: A list of the most prominent colors in the image, often displayed as hex codes or RGB values (which you learned about previously with HTML color codes).    • Color percentages: The percentage of the image occupied by each identified color.    • Averages: An average color representing the overall tone of the image.How Do Image Color Extractors Work?The general process involves these steps:    • Image Upload: You provide the image file to the extractor tool.    • Image Analysis: The tool breaks down the image into individual pixels.    • Color Identification: Each pixel's color information is analyzed, typically using RGB values.    • Color Grouping: Similar colors are grouped together to identify dominant themes.    • Output Generation: The tool generates the chosen output format (palette, percentages, etc.).Benefits of Using Image Color Extractors:There are several reasons why image color extractors can be helpful:    • Design Inspiration: Extracted color palettes can inspire design schemes for websites, marketing materials, or graphic design projects that complement the image's mood or theme.    • Web Design: Extracted colors can be used to create color palettes for websites or apps that are visually consistent with the images they display.    • Image Editing: Identifying dominant colors can inform photo editing decisions, like adjusting color balance or selective color correction.    • Fashion & Product Design: Extracting colors from product photos can help with creating color-coordinated product lines or fashion accessories.",
  },
  {
    id: 10,
    route: "/image-compression/",
    title: "Image Compression",
    text: "What is image compressionImage compression is the process of reducing the file size of an image while maintaining an acceptable level of quality. This is crucial for various reasons, especially on the web:    • Faster Loading Times: Smaller image files transfer quicker over the internet, resulting in faster webpage loading times. This improves user experience and website performance.    • Reduced Storage Requirements: Compressed images require less storage space on servers or devices, leading to more efficient storage usage.    • Bandwidth Conservation: Smaller image sizes use less bandwidth for transmission, which can be important for users with limited data plans or congested networks.Types of Image Compression:There are two main categories of image compression:    • Lossless Compression: This type of compression removes redundant data from the image without any loss of quality. The original image can be perfectly reconstructed from the compressed data. Techniques like Huffman coding and LZW compression are commonly used for lossless compression.    • Lossy Compression: This type prioritizes achieving a significant reduction in file size by allowing some amount of quality loss. The original image cannot be exactly recovered from the compressed data. However, the goal is to minimize the quality loss to an acceptable level, where the human eye might not perceive a significant difference. Popular image formats like JPEG and WebP use lossy compression algorithms.Choosing the Right Compression Technique:The ideal compression technique depends on several factors:    • Required Quality Level: If the image requires perfect retention of details (e.g., medical scans, diagrams), lossless compression is preferred. For most photos or web graphics, some loss in quality might be acceptable in exchange for a smaller file size.    • Image Type: Different image formats are better suited for specific compression techniques. Lossless compression works well for images with sharp edges and flat colors (e.g., text-based graphics). Lossy compression is more effective for photographs with gradual color variations.    • Target Audience: Consider how sensitive your audience is to image quality. If minor quality reduction is acceptable, lossy compression can be a good choice.",
  },
  {
    id: 11,
    route: "/image-editor/",
    title: "Image Editor",
    text: "Credit: this image editor is an open source project under the MIT license:  https://github.com/viliusle/miniPaintBenefits of Using Image Editors in Browser:    • Convenience and Accessibility: You can edit images from any device with a web browser and internet connection, without installing software.    • Simple Edits: They are well-suited for quick and basic image edits without needing a powerful program.    • Collaboration: Some browser-based editors allow real-time collaboration, enabling multiple users to edit an image simultaneously.    • Free or Freemium Options: Many browser-based editors are free to use, with some offering premium features for a subscription.",
  },
  {
    id: 12,
    route: "/javascript-formatter/",
    title: "Javascript Formatter ",
    text: "What is Javascript?JavaScript (often abbreviated as JS) is a programming language that plays a central role in making webpages interactive. It's considered one of the core technologies of the web, alongside HTML and CSS. Here's a breakdown of what JavaScript does:Brings webpages to life: Imagine a webpage that just displays text and images, without any animations or user interaction. That's where JavaScript comes in. It adds features like dynamic content updates, interactive maps, and cool animations.Works behind the scenes: JavaScript code is usually embedded within HTML documents or included from separate files. When you visit a webpage, the web browser has a built-in JavaScript engine that executes the code, making the webpage interactive.Plays well with others: JavaScript works alongside HTML and CSS. HTML structures the content of a webpage, CSS defines the styling, and JavaScript adds interactivity.",
  },
  {
    id: 13,
    route: "/json-formatter/",
    title: "JSON Formatter ",
    text: "What is JSON?JSON, which stands for JavaScript Object Notation, is a lightweight format for storing and transmitting data. It's often used for exchanging information between web servers and web applications, but its applications extend far beyond the web. Here's a breakdown of what JSON offers:Human-readable: JSON data is written in plain text, using a format similar to JavaScript object literals. This makes it easy for humans to understand and edit the data, even without any programming knowledge.Lightweight and Efficient: JSON files are compact, making them ideal for data transmission. This is important for web applications where fast loading times are crucial.Language Independent: Despite its name, JSON is not specific to JavaScript. Many programming languages have libraries or built-in functionality to work with JSON data. This makes it a universal format for data exchange.",
  },
  {
    id: 14,
    route: "/jwt/",
    title: "JSON Web Token Validator",
    text: "To validate a Json Web Token: choose the target algorithm, paste in your encryption key or private/pubice key paris, then paste your jwt on the left.To generate a Json Web Token: choose the target algorithm, enter your header, playload in json format, then choose or generate an encryption.; What is a JWT?A JWT or JSON Web Token is a token used to authenticate user actions. Some non-sensitive user info are stored in the payload section of a JWT so the backend server can validate the identify of the client without having to call the user authencation server.To validate a JWT, the backend server compares the signature section of the JWT with the hashed value of the payload to make sure the payload and hence the JWT has not been tampered with.Some pros of JWT include: no database table, simpler to use, and used across services.Some cons of JWT include: somewhat weaker security with just one secret key used, cannot be revoked by the backend, payload data are transparent thus making it tricky to handle on the client side.JWT is one of the most widely used user authentication protocol.",
  },
  {
    id: 15,
    route: "/md5-hash/",
    title: "MD5 Hash",
    text: "What is an MD5 hash?An MD5 (message-digest algorithm 5) hash is a unique fingerprint created from a piece of data. It's like a digital summary of the data, represented in a 128-bit alphanumeric string.How does it work?The MD5 algorithm takes any kind of data as input, runs it through a complex mathematical formula, and outputs a fixed-length hash. The same data will always produce the same hash, but different data will produce entirely different hashes. That's why it's useful for verification.What are MD5 hashes used for?There are a couple of main applications:    • Data Integrity Check: An MD5 hash can be used to verify that a file hasn't been corrupted during transfer or download. You can generate a hash of the original file, then compare it to the hash of the downloaded file. If they match, the file is intact.    • Password Storage (with caution): In the past, MD5 hashes were used to store passwords in databases. However, this is not considered secure anymore due to advancements in computing power that make it possible to crack passwords from their hashes.Are MD5 hashes still secure?MD5 has been around for a while, and weaknesses have been discovered. It's not recommended for storing passwords or any other sensitive data. There are stronger hashing algorithms available, such as SHA-256, that are more collision-resistant (meaning it's much harder to create two different inputs that produce the same hash).",
  },
  {
    id: 16,
    route: "/password/",
    title: "Password Generator",
    text: "How to pick a secure password?Use a combination of random lower case letters, upper case letter, numbers, and symbols, and make sure it is at least 8 characters in length. Or just use a random password generator.Do not use your personal information as passwords, for example, your first pet's name, your mother's maiden name, etc.Will my password be stored on your servers?Absolutely Not! Our password generator are designed to run in your browers only and in offline mode, meaning that after the page is loaded, this web page will not connect to any servers. There will be no information sending out to the internet. You may disconnect your Internet connection after the page is loaded and will still be able to use our password generator.What are some of the worst passwords??According to theNordPass Report, below are the top 10 worst passwords:    • 12345    • 123456    • 123456789    • test1    • password    • 12345678    • zinch    • g_czechout    • asdf    • qwerty",
  },
  {
    id: 18,
    route: "/qrcode/",
    title: "QR Code Generator",
    text: "How to useChoose your desired QR code format, enter the content in the fields, and the QR code will be updated on the right in real time.What is a QR codeQR code or Quick Response code is a two dimensional image that embeds a hidden string of text inside. The QR code scanner extract that hidden text from the image and takes appropriate actions according to the format of the text.For example, if the text format is URL, the scanner then opens up your browser and navigate to that url; if the text format is a wifi connection, your scanner will open up your wifi connection settings and paste in the wifi username and password to connect; if the text format is email, your scanner will open up your default email app and paste the content in the composed email.Common QR code formats include: URL, email, contact, phone number, paypal, account login, etc.For more information, please refer to the following pages:QR Code by Wikipedia What is a QR code by Insider",
  },
  {
    id: 19,
    route: "/rsa-encryption/",
    title: "RSA Encryption",
    text: "What is RSA Encryption?RSA is one of the first public-private key encryption algorithms around the world, and is still widely used for secure data transmission today. In this cryptosystem, the public key, which is distributed publicly, is used to encrypt messages; and the private key, which is kept secret, is used to decrypt messages.RSA is typically used in two manners: data transmission and digital signatures. For example, SSL, a key component of https, uses the RSA algorithm to set up a secure connection between users' browers and the backend server.For further reading:    • Comparitech    • Wikipedia",
  },
  {
    id: 20,
    route: "/sha1-hash/",
    title: "SHA1 Hash",
    text: "What is an SHA1 hash?SHA-1 stands for Secure Hash Algorithm 1. It's a cryptographic hash function that takes an input of any size and generates a unique, fixed-length (160-bit) alphanumeric string called a message digest. This digest acts like a fingerprint for the data.How does it work?Imagine a complex mathematical machine. You feed it any kind of data (text, file, etc.). The SHA-1 algorithm crunches that data and spits out a unique hash based on its properties. The same data will always produce the same hash, but even slight changes to the data will result in a completely different hash.What are SHA1 hashes used for?SHA-1 was widely used for various purposes, including:    • Verifying File Integrity: Before downloading a file, you can obtain its SHA-1 hash from a trusted source. Once downloaded, you can calculate the SHA-1 hash of the downloaded file and compare it to the original hash. If they match, the file is intact.    • Digital Signatures: SHA-1 was used in digital signatures to ensure the authenticity and integrity of a message. A digital signature is like a tamper-evident seal created using a combination of the message and a private key.Security ConcernsWhile SHA-1 was once a secure hashing algorithm, it's no longer considered cryptographically strong. Theoretical weaknesses have been identified that could allow attackers to forge digital signatures. Due to this, major tech companies and organizations have phased out SHA-1 in favor of more secure hashing algorithms like SHA-256 and SHA-3.Is SHA-1 Still Used?Some older software or systems might still rely on SHA-1. However, it's generally recommended to use stronger hashing algorithms whenever possible for new applications due to the security risks associated with SHA-1.",
  },
  {
    id: 21,
    route: "/sha256-hash/",
    title: "SHA256 Hash",
    text: "What is an SHA256 hash?SHA-256 (Secure Hash Algorithm 256) is a cryptographic hash function from the SHA-2 family. It takes any kind of data as input (text, file, etc.) and generates a unique, fixed-length (256-bit) alphanumeric string called a hash. This hash acts like a fingerprint for the data.How does it work?SHA-256 puts the input data through a series of mathematical operations, essentially creating a complex summary of the data's characteristics. Even minor changes to the original data will result in a completely different hash. This one-way property makes SHA-256 valuable for various security applications.What are SHA256 hashes used for?SHA-256 has numerous applications due to its ability to verify data integrity and ensure authenticity:    • Verifying File Downloads: When downloading a file, you can obtain its SHA-256 hash from a trusted source. After downloading, you can calculate the SHA-256 hash of the downloaded file and compare it to the original hash. If they match, the file is intact and hasn't been corrupted during transfer.    • Digital Signatures: SHA-256 is used in digital signatures to verify the authenticity and integrity of a message. A digital signature is like a tamper-evident seal created using a combination of the message and a private key. By including the SHA-256 hash in the signature, the recipient can ensure the message hasn't been altered and originates from the claimed signer.    • Password Hashing: SHA-256 (or stronger SHA-3 variants) can be used to securely store passwords. The password itself is not stored, but rather its hash. When a user attempts to log in, the entered password is hashed and compared to the stored hash. This approach protects passwords from being directly exposed in case of a security breach.    • Blockchain Technology: Cryptocurrencies like Bitcoin heavily rely on SHA-256 for transaction verification and proof-of-work mechanisms.Security and SHA-256SHA-256 is considered a secure hashing algorithm for most current applications. However, as computing power continues to advance, even stronger hashing algorithms like SHA-3 are being developed to stay ahead of potential security threats.",
  },
  {
    id: 22,
    route: "/sha512-hash/",
    title: "SHA512 Hash",
    text: "What is an SHA512 hash?SHA-512, or Secure Hash Algorithm 512, is a cryptographic hash function used for generating a unique and fixed-size (512-bit) string, known as a hash, from any kind of data. This hash acts like a digital fingerprint that identifies the data.How does it work?SHA-512 operates similarly to other SHA-2 family algorithms. It processes the input data through a series of mathematical steps, essentially creating a complex summary of the data's characteristics. Even the slightest change in the original data will result in a completely different hash, making it a one-way function. pen_sparkApplications of SHA-512 HashesSHA-512 finds use in various security applications due to its ability to ensure data integrity and authenticity:    • Verifying File Downloads: When downloading a large file, you can obtain its SHA-512 hash from a trusted source. After downloading, you can calculate the SHA-512 hash of the downloaded file and compare it to the original hash. If they match, the file remains intact during transfer.    • Digital Signatures: SHA-512 can be used in digital signatures to verify the authenticity and integrity of a message. Similar to SHA-256, a digital signature acts like a tamper-evident seal created using a combination of the message and a private key. By including the SHA-512 hash in the signature, the recipient can ensure the message hasn't been altered and originates from the claimed signer.    • Password Hashing: While SHA-256 is more common, SHA-512 can also be used for password hashing. The password itself is not stored, but rather its hash. When a user attempts to log in, the entered password is hashed and compared to the stored hash. This approach protects passwords from being directly exposed in case of a security breach. However, due to its higher computational cost, SHA-256 might be preferable for password hashing on resource-constrained systems.    • Blockchain Technology: Some cryptocurrencies or blockchain applications might utilize SHA-512 for specific purposes like hashing data blocks or other security measures.Security ConsiderationsSHA-512 is a strong hashing algorithm and is considered secure for most current applications. Due to its larger hash output size (512 bits compared to 256 bits in SHA-256), it offers potentially better collision resistance (meaning it's harder to create two different inputs that produce the same hash). However, as with other cryptographic algorithms, advancements in computing power might necessitate the development of even stronger hashing algorithms in the future.",
  },
  {
    id: 23,
    route: "/timestamp/",
    title: "Timestamp Converter",
    text: 'What is a unix timestamp?In computer science, timestamps act as digital footprints, meticulously recording the exact moment a specific event transpired within a system. These events encompass a wide range, from the humble creation or modification of a file to the critical transmission and reception of a network message. Unlike the subjective nature of human perception, timestamps are represented numerically, ensuring an objective and machine-readable record of time.Common representations include seconds elapsed since a designated reference point, often the Unix Epoch (January 1st, 1970, 00:00:00 UTC), or alternatively, milliseconds elapsed since an arbitrary starting time. This numerical precision underpins a multitude of critical tasks within a system. For instance, timestamps facilitate data versioning by pinpointing the exact moment a file was modified, enabling users to revert to previous versions if necessary.Furthermore, timestamps play a pivotal role in log analysis, which involves scrutinizing system activity. By meticulously recording timestamps for events like program execution or system errors, administrators can reconstruct the sequence of events, aiding in troubleshooting and identifying potential security vulnerabilities. The temporal order maintained by timestamps is equally crucial. Imagine a scenario where multiple processes compete for access to a shared resource. Timestamps allow the system to definitively determine the order in which processes requested access, ensuring fair and efficient resource allocation.Finally, the format of a timestamp can vary depending on the specific application. Popular choices include Unix timestamps, which offer a concise numerical representation, ISO 8601 timestamps, known for their human-readable format (YYYY-MM-DDTHH:mm:ssZ), and milliseconds since epoch, which provides high precision for time-sensitive operations. In essence, timestamps are the silent guardians of time within a computer system, meticulously recording events and ensuring temporal order, thereby facilitating a wide range of critical tasks for developers and system administrators alike.; The year 2038 problem; Some systems store the unix timestamp as a 32-bit integer, which has a upper limit of 2147483647, equivalent to 2038-01-19 03:14:07 UTC. All 32-bit representations will overflow and cease to work after that time. In order to prevent system errors, all 32-bit representations will need to upgrade to 64-bit representation. For further readings, please refer to the""Year 2038 problem"" wiki page.',
  },
  {
    id: 24,
    route: "/url-encode/",
    title: "Url Encode",
    text: 'What is URL Encoding?URL encoding, also known as percent-encoding, is a method for transforming characters in a Uniform Resource Locator (URL) into a format that can be universally understood and transmitted over the internet. URLs can only contain a specific set of characters from the US-ASCII character set. URL encoding comes into play when a URL needs to include characters that fall outside this allowed set.How does it work?    • Unsafe Characters: Certain characters are considered unsafe in URLs because they have special meanings within the URL structure (like "/" for separating directories or "?" for initiating a query string). Spaces are another example of an unsafe character.    • Encoding Process: When a URL encounters an unsafe character, it applies URL encoding. The character is converted into its corresponding byte value in UTF-8 (a character encoding that can represent a wider range of characters).    • Hexadecimal Conversion: Each byte value from the UTF-8 conversion is then translated into a two-digit hexadecimal number (using base-16).    • Percent Sign Prefix: The hexadecimal digits representing the byte value are prefixed with a percent sign (%) to indicate that it\'s an encoded character.Why is URL Encoding Important?    • Universal Understanding: By encoding unsafe characters, URLs become readable and interpretable by all web browsers and servers regardless of their locale.    • Data Integrity: Encoding ensures that the data within the URL remains intact during transmission across the internet.Things to Remember About URL Encoding    • Not all characters need encoding. Letters, numbers, hyphens, underscores, and periods are generally safe characters in URLs.    • Decoding a URL-encoded string is straightforward. The percent sign and following hexadecimal digits are converted back into their corresponding character using the UTF-8 encoding scheme.    • There are online tools and libraries available in various programming languages to perform URL encoding and decoding.',
  },
  {
    id: 25,
    route: "/xml-formatter/",
    title: "XML Formatter ",
    text: "XML, which stands for Extensible Markup Language, is a way to store and transport data in a format that's both human-readable and machine-readable. Think of it like a filing system for information, but flexible enough to handle any kind of data you throw at it.Here's a breakdown of what XML offers:Flexibility: Unlike HTML, which has predefined tags, XML lets you create your own tags to describe your data. This makes it suitable for storing all sorts of information, from product catalogs to scientific data.Structured Data: XML data is organized in a hierarchical structure, using tags to define elements and sub-elements. This makes it easy to understand and navigate the information within an XML file.Sharing Across Systems: Since XML follows a standardized format, different software applications and platforms can easily understand and process XML data. This makes it a popular choice for exchanging information between different systems.",
  },
];

var minisearchInstance = new MiniSearch({
  fields: ["title", "text"],
  storeFields: ["route", "title", "text"],
});
var minisearchInitialized = false;

function getMiniSearch() {
  if (!minisearchInitialized) {
    minisearchInstance.addAll(pageIndices);
    minisearchInitialized = true;
  }
  return minisearchInstance;
}

export default {
  getMiniSearch,
};
